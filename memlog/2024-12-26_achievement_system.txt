# Achievement System Implementation - 2024-12-26

## Changes Made
- Created new module `modules/achievements/` for achievement system
- Implemented SQLite database storage for achievements in `achievements.db`
- Integrated with existing AI system to use Jaxon's eshay character for achievement announcements
- Added Achievement class to store achievement metadata (name, description)
- Added "Test Achievement" with proper name and description
- Enhanced AI responses to include achievement name and reason for earning it
- Added Discord markdown formatting for achievement announcements (indented block style with trophy emoji)
- Updated to use claude-3-5-sonnet-20241022 AI model

## Achievement Details

1. Test Achievement:
   - Name: "Test Achievement"
   - ID: FIRST_REQUEST
   - Description: "Earned by asking for an achievement using the 'iwantanachievement' command"
   - Trigger: User types "iwantanachievement" in any channel

2. Chatterbox Achievement:
   - Name: "Chatterbox"
   - ID: CHATTY
   - Description: "Sent 50 messages in a single day"
   - Trigger: Automatically checks message count in chat_history.db for the last 24 hours
   - Implementation: Uses SQL query with datetime functions to count messages within a rolling 24-hour window

3. Love Homies Achievement:
   - Name: "Showing some love to the homies <3"
   - ID: LOVE_HOMIES
   - Description: "We love our homies"
   - Trigger: Message contains a user mention and the phrase "i love you" (case insensitive)
   - Implementation: Checks message.mentions and does case-insensitive string matching

4. Bumbag Achievement:
   - Name: "Bumbag"
   - ID: BUMBAG
   - Description: "You adjusted your bumbag in public"
   - Trigger: React to any message with 🛍️ (pouch) or 👝 (clutch_bag) emoji
   - Implementation: Checks reaction emoji against target emojis

5. Big Puff Achievement:
   - Name: "Big Puff"
   - ID: BIG_PUFF
   - Description: "Took a big puff of your ciggie"
   - Trigger: React to any message with 🚬 (smoking) emoji
   - Implementation: Checks reaction emoji

6. TN Roll Achievement:
   - Name: "Rolled your first pair of TN's"
   - ID: TN_ROLL
   - Description: "Rolled a fuckin' nerd for his TN's"
   - Trigger: React to any message with 👟 (athletic_shoe) or 🏃 (running_shoe) emoji
   - Implementation: Checks reaction emoji against target emojis

7. Not a programmer Achievement:
   - Name: "Not a programmer"
   - ID: NOT_A_PROGRAMMER
   - Description: "Probably sarcastically told Sean he's not a programmer"
   - Trigger: Message contains the phrase "not a programmer" (case insensitive)
   - Implementation: Case-insensitive string matching on message content

8. True Aussie Achievement:
   - Name: "True Aussie"
   - ID: TRUE_AUSSIE
   - Description: "Used some true Aussie insults"
   - Trigger: Message contains the word "cunt" (case insensitive)
   - Implementation: Case-insensitive string matching on message content

## Reaction System Implementation
- Added on_raw_reaction_add event handler in DrongoBot class
- Reactions trigger achievement checks just like messages
- Each reaction is checked against specific emoji sets for different achievements
- Uses Discord's raw reaction event to ensure all reactions are captured

## Technical Details
- Database Schema:
  ```sql
  CREATE TABLE user_achievements (
      user_id INTEGER,
      achievement_id TEXT,
      earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      PRIMARY KEY (user_id, achievement_id)
  )
  ```
- Uses bot's AIHandler for consistent eshay-style responses
- Prevents duplicate achievements through SQLite's PRIMARY KEY constraint

## Files Modified
- Created: modules/achievements/achievements.py
- Created: modules/achievements/__init__.py
- Modified: drongo.py (added achievement system integration)

## Multi-Server Support Fix
- Moved AI response processing outside primary guild check
- Moved achievement checking outside primary guild check
- Now only database storage and stats tracking are limited to primary guild
- Bot features (AI, achievements) now work in all servers

## Achievement Command Implementation - 2024-12-26
- Added /achievements slash command for users to check their progress
- Command shows:
  * List of earned achievements with names and descriptions
  * Total number of achievements earned
  * Number of remaining achievements (without revealing what they are)
- Responses are ephemeral (only visible to the command user)
- Implementation Details:
  * Added get_user_achievements method to AchievementSystem
  * Created new achievement_commands.py module
  * Updated register_commands.py to include the command
  * Modified drongo.py to set up achievement commands

## Achievement System Fix - 2024-12-26
- Added time window check to prevent achievements from triggering on old content
- Implementation Details:
  * Messages and reactions are only processed if they occurred within the last hour
  * Uses Discord's UTC timestamp utilities to calculate message age
  * Prevents achievements from being triggered by historical content
  * More dynamic approach compared to fixed start date

## Achievement Announcement Improvements - 2024-12-26
- Enhanced achievement announcements to properly tag users and fix AI responses
- Implementation Details:
  * Added user mention at the start of achievement messages
  * Modified AI prompt to include user's name
  * Fixed AI responses to correctly indicate announcing someone else's achievement
  * Added user lookup to ensure valid mentions
